{
  "workflows": [
    {
      "name": "Download de Vídeo",
      "description": "Workflow para baixar vídeo do YouTube",
      "nodes": [
        {
          "type": "Manual Trigger",
          "name": "Manual Trigger",
          "parameters": {}
        },
        {
          "type": "HTTP Request",
          "name": "Download Video",
          "parameters": {
            "url": "http://video-processor:5000/download",
            "method": "POST",
            "sendHeaders": true,
            "headerParameters": [
              {
                "name": "Content-Type",
                "value": "application/json"
              }
            ],
            "sendBody": true,
            "bodyContentType": "json",
            "jsonBody": "{\n  \"url\": \"{{ $json.url }}\",\n  \"filename\": \"{{ $json.filename || 'video_' + new Date().getTime() }}\"\n}"
          }
        },
        {
          "type": "Wait",
          "name": "Wait for Download",
          "parameters": {
            "amount": 30,
            "unit": "seconds"
          }
        },
        {
          "type": "HTTP Request",
          "name": "Check Status",
          "parameters": {
            "url": "http://video-processor:5000/status/{{ $('Download Video').first().json.task_id }}",
            "method": "GET"
          }
        }
      ]
    },
    {
      "name": "Cortar Vídeo",
      "description": "Workflow para cortar vídeo já baixado",
      "nodes": [
        {
          "type": "Manual Trigger",
          "name": "Manual Trigger",
          "parameters": {}
        },
        {
          "type": "HTTP Request",
          "name": "Cut Video",
          "parameters": {
            "url": "http://video-processor:5000/cut",
            "method": "POST",
            "sendHeaders": true,
            "headerParameters": [
              {
                "name": "Content-Type",
                "value": "application/json"
              }
            ],
            "sendBody": true,
            "bodyContentType": "json",
            "jsonBody": "{\n  \"input_file\": \"{{ $json.input_file }}\",\n  \"start_time\": \"{{ $json.start_time }}\",\n  \"end_time\": \"{{ $json.end_time }}\",\n  \"output_filename\": \"{{ $json.output_filename }}\"\n}"
          }
        },
        {
          "type": "Wait",
          "name": "Wait for Cut",
          "parameters": {
            "amount": 60,
            "unit": "seconds"
          }
        },
        {
          "type": "HTTP Request",
          "name": "Check Status",
          "parameters": {
            "url": "http://video-processor:5000/status/{{ $('Cut Video').first().json.task_id }}",
            "method": "GET"
          }
        }
      ]
    },
    {
      "name": "Download e Cortar em Uma Operação",
      "description": "Workflow completo para baixar e cortar vídeo",
      "nodes": [
        {
          "type": "Manual Trigger",
          "name": "Manual Trigger",
          "parameters": {}
        },
        {
          "type": "HTTP Request",
          "name": "Download and Cut",
          "parameters": {
            "url": "http://video-processor:5000/download-and-cut",
            "method": "POST",
            "sendHeaders": true,
            "headerParameters": [
              {
                "name": "Content-Type",
                "value": "application/json"
              }
            ],
            "sendBody": true,
            "bodyContentType": "json",
            "jsonBody": "{\n  \"url\": \"{{ $json.url }}\",\n  \"start_time\": \"{{ $json.start_time }}\",\n  \"end_time\": \"{{ $json.end_time }}\",\n  \"filename\": \"{{ $json.filename }}\",\n  \"output_filename\": \"{{ $json.output_filename }}\"\n}"
          }
        },
        {
          "type": "Function",
          "name": "Extract Task ID",
          "parameters": {
            "functionCode": "return [{\n  json: {\n    task_id: $input.first().json.task_id,\n    message: $input.first().json.message\n  }\n}];"
          }
        },
        {
          "type": "Wait",
          "name": "Wait for Processing",
          "parameters": {
            "amount": 2,
            "unit": "minutes"
          }
        },
        {
          "type": "HTTP Request",
          "name": "Check Final Status",
          "parameters": {
            "url": "http://video-processor:5000/status/{{ $('Extract Task ID').first().json.task_id }}",
            "method": "GET"
          }
        },
        {
          "type": "IF",
          "name": "Check if Completed",
          "parameters": {
            "conditions": {
              "string": [
                {
                  "value1": "{{ $('Check Final Status').first().json.status }}",
                  "operation": "equal",
                  "value2": "completed"
                }
              ]
            }
          }
        },
        {
          "type": "Function",
          "name": "Success Message",
          "parameters": {
            "functionCode": "return [{\n  json: {\n    status: 'success',\n    message: 'Vídeo processado com sucesso!',\n    output_path: $input.first().json.cut_path || $input.first().json.output_path\n  }\n}];"
          }
        },
        {
          "type": "Function",
          "name": "Error Message",
          "parameters": {
            "functionCode": "return [{\n  json: {\n    status: 'error',\n    message: 'Erro no processamento do vídeo',\n    error: $input.first().json.error\n  }\n}];"
          }
        }
      ]
    },
    {
      "name": "Listar Arquivos",
      "description": "Workflow para listar arquivos disponíveis",
      "nodes": [
        {
          "type": "Manual Trigger",
          "name": "Manual Trigger",
          "parameters": {}
        },
        {
          "type": "HTTP Request",
          "name": "List Files",
          "parameters": {
            "url": "http://video-processor:5000/files",
            "method": "GET"
          }
        },
        {
          "type": "Function",
          "name": "Format Response",
          "parameters": {
            "functionCode": "const data = $input.first().json;\nconst downloads = data.downloads || [];\nconst cuts = data.cuts || [];\n\nreturn [{\n  json: {\n    total_downloads: downloads.length,\n    total_cuts: cuts.length,\n    downloads: downloads,\n    cuts: cuts,\n    message: `Encontrados ${downloads.length} downloads e ${cuts.length} cortes`\n  }\n}];"
          }
        }
      ]
    }
  ],
  "webhook_examples": [
    {
      "name": "Webhook para Download",
      "description": "Recebe dados via webhook e inicia download",
      "trigger": "Webhook",
      "method": "POST",
      "path": "download-video",
      "example_payload": {
        "url": "https://www.youtube.com/watch?v=dQw4w9WgXcQ",
        "filename": "meu_video"
      }
    },
    {
      "name": "Webhook para Corte",
      "description": "Recebe dados via webhook e inicia corte",
      "trigger": "Webhook",
      "method": "POST",
      "path": "cut-video",
      "example_payload": {
        "input_file": "meu_video.mp4",
        "start_time": "00:01:00",
        "end_time": "00:02:00",
        "output_filename": "corte_meu_video.mp4"
      }
    }
  ]
} 